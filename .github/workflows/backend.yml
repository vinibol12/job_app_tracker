name: Backend Deploy

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend.yml'
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: job-app-tracker-api
  AZURE_WEBAPP_PACKAGE_PATH: 'backend/publish'
  DOTNET_VERSION: '8.0.x'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://job-app-tracker-api.azurewebsites.net
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Restore dependencies
      run: |
        cd backend/src
        dotnet restore
        
    - name: Run tests
      run: |
        # Check directory structure first to debug
        pwd
        ls -la
        ls -la backend || echo "backend dir not found"
        ls -la backend/src || echo "backend/src dir not found"
        ls -la backend/tests || echo "backend/tests dir not found"
        find . -name "*.csproj" -type f | grep -v obj
        
        # Then try to build and test
        if [ -d "backend" ]; then
          cd backend
          find . -name "*.csproj" -type f | grep -v obj
          # Account for case sensitivity - use the correct casing for the .csproj file
          if [ -f "src/JobTracker.API.csproj" ]; then
            dotnet build src/JobTracker.API.csproj --configuration Release
            dotnet test tests/JobTracker.Tests.csproj --configuration Release
          else
            echo "Project files not found at expected locations"
            exit 1
          fi
        fi
        
    - name: Build with dotnet
      run: |
        cd backend/src
        dotnet build JobTracker.API.csproj --configuration Release
        dotnet publish JobTracker.API.csproj -c Release -o ../publish
    
    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
